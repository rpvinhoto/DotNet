// <auto-generated />
using System;
using Livraria.Dados.Contexto;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Livraria.Dados.Migrations
{
    [DbContext(typeof(LivrariaContext))]
    partial class LivrariaContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.11-servicing-32099")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Livraria.Dominio.Entidades.Categoria", b =>
                {
                    b.Property<long>("CategoriaId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("CategoriaId");

                    b.ToTable("Categoria");

                    b.HasData(
                        new { CategoriaId = 1L, Nome = "Ficção" },
                        new { CategoriaId = 2L, Nome = "Fábula" },
                        new { CategoriaId = 3L, Nome = "Biografia" }
                    );
                });

            modelBuilder.Entity("Livraria.Dominio.Entidades.Editora", b =>
                {
                    b.Property<long>("EditoraId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("EditoraId");

                    b.ToTable("Editora");

                    b.HasData(
                        new { EditoraId = 1L, Nome = "Aleph" },
                        new { EditoraId = 2L, Nome = "Reynal & Hitchcock" }
                    );
                });

            modelBuilder.Entity("Livraria.Dominio.Entidades.Livro", b =>
                {
                    b.Property<long>("LivroId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("CategoriaId");

                    b.Property<DateTime?>("DataPublicacao")
                        .HasColumnType("datetime2");

                    b.Property<long>("EditoraId");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("LivroId");

                    b.HasIndex("CategoriaId");

                    b.HasIndex("EditoraId");

                    b.ToTable("Livro");

                    b.HasData(
                        new { LivroId = 1L, CategoriaId = 1L, DataPublicacao = new DateTime(1984, 7, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), EditoraId = 1L, Titulo = "Neuromancer" },
                        new { LivroId = 2L, CategoriaId = 2L, DataPublicacao = new DateTime(1943, 4, 6, 0, 0, 0, 0, DateTimeKind.Unspecified), EditoraId = 2L, Titulo = "The Little Prince" }
                    );
                });

            modelBuilder.Entity("Livraria.Dominio.Entidades.Livro", b =>
                {
                    b.HasOne("Livraria.Dominio.Entidades.Categoria", "Categoria")
                        .WithMany("Livros")
                        .HasForeignKey("CategoriaId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Livraria.Dominio.Entidades.Editora", "Editora")
                        .WithMany("Livros")
                        .HasForeignKey("EditoraId")
                        .OnDelete(DeleteBehavior.Restrict);
                });
#pragma warning restore 612, 618
        }
    }
}
